name: CI

on:
  push:
    branches: [main]
    tags: ["v*"]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.1

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install
      - run: pnpm run build

      - uses: actions/upload-artifact@v3
        with:
          name: bszet-vplan
          path: ./dist

  deploy:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v2.2.1

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'pnpm'

      - run: pnpm install

      - name: Metadata
        id: meta
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "::set-output name=env::staging"
            echo "::set-output name=version::${{ github.sha }}"
          else
            echo "::set-output name=env::production"
            echo "::set-output name=version::${{ github.ref }}"
          fi

      - name: Publish
        uses: cloudflare/wrangler-action@2.0.0
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ steps.meta.outputs.env }}
          preCommands: |
            sed -i 's|development|${{ steps.meta.outputs.version }}|g' src/sentry.ts
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: ${{ steps.meta.outputs.env }}
          version: ${{ steps.meta.outputs.version }}
          sourcemaps: ./dist
          ignore_missing: true
          strip_common_prefix: true
